package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/xsadia/backlogs-server/graph/model"
)

// CreateBacklog is the resolver for the createBacklog field.
func (r *mutationResolver) CreateBacklog(ctx context.Context, input model.CreateBacklogInput) (*model.Backlog, error) {
	panic(fmt.Errorf("not implemented: CreateBacklog - createBacklog"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	return &model.User{
		ID:       "pipipi",
		Email:    "fizi@gmail.com",
		Username: "fizi",
		Password: "123123",
		Bio:      nil,
	}, nil
}

// Backlogs is the resolver for the backlogs field.
func (r *queryResolver) Backlogs(ctx context.Context) ([]*model.Backlog, error) {
	panic(fmt.Errorf("not implemented: Backlogs - backlogs"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
